#!/usr/bin/env bash

PS4='[script/test:${LINENO}] $ '
set -euo pipefail
set -x

# Avoid test pollution by clearing out any initial state that might be lingering
./script/reset_example_app

# Make sure the main project installs & passes its own rake
bundle
bundle exec rake

# Exercise the example app
cd example
bundle
bin/rake db:setup

# Test basic initial usage
bin/rake test_data:install
bin/rake test_data:dump
bin/rails test test/integration/basic_boops_test.rb
bin/rails test test/integration/mode_switching_demo_test.rb
bin/rails test test/integration/parallel_boops_with_fixtures_test.rb
bin/rails test test/integration/parallel_boops_without_fixtures_test.rb

# Test using the test_data env to interactively create test data
RAILS_ENV=test_data rails runner "5.times { Boop.create! }"
bin/rake test_data:dump
bin/rails test test/integration/updated_boops_test.rb

# Test a migration being added and run and an out-of-date dump being loaded
cp ../test/fixtures/20210418220133_add_beep_to_boops.rb db/migrate
bin/rake db:migrate
bin/rake db:test:prepare
bin/rake test_data:drop_database
bin/rake test_data:load
RAILS_ENV=test_data bin/rake db:migrate
bin/rake test_data:dump
bin/rails test test/integration/migrated_boops_test.rb

# Run a test that commits test data thru to the database
bin/rails test test/integration/transaction_committing_boops_test.rb

# Add a second migration, this time without wiping the test_data db and with a table we want to ignore
cp ../test/fixtures/20210423114916_add_table_we_want_to_ignore.rb db/migrate
cp ../test/fixtures/chatty_audit_log.rb app/models
bin/rake db:migrate
RAILS_ENV=test_data bin/rake db:migrate
RAILS_ENV=test_data rails runner "50.times { ChattyAuditLog.create!(message: 'none of this matters') }"
# Gsub config file and uncomment + add table to excluded table list
ruby -e '
  path = "config/environments/test_data.rb"
  IO.write(path, File.open(path) { |f|
    f.read.gsub("# config.dont_dump_these_tables = []", "config.dont_dump_these_tables = [\"chatty_audit_logs\"]")
  })
'
bin/rake test_data:dump
if grep -q "INSERT INTO public.chatty_audit_logs" "test/support/test_data/data.sql"; then
  echo "Dump contained excluded table 'chatty_audit_logs'"
  exit 1
fi
bin/rake db:test:prepare
bin/rails test test/integration/dont_dump_tables_test.rb

# Cleanup
cd ..
./script/reset_example_app
